services:
    nginx:
        image: nginx:1.24-alpine
        container_name: jobberwocky_server
        ports:
            - "80:80"
        depends_on:
            php:
                condition: service_healthy
        volumes:
            - .:/var/www
            - ./docker/nginx/nginx-default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - jobberwocky_network

    php:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: jobberwocky_api
        volumes:
            - .:/var/www/
            - ./storage:/var/www/storage
            - ./bootstrap/cache:/var/www/bootstrap/cache
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
        healthcheck:
            test: [ "CMD", "php-fpm", "-t" ]
            interval: 5s
            retries: 3
        networks:
            - jobberwocky_network

    mysql:
        image: mysql:8.0
        container_name: jobberwocky_db
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: jobber
            MYSQL_USER: api_jobber
            MYSQL_PASSWORD: secret
        ports:
            - "3307:3306"
        volumes:
            - db_data:/var/lib/mysql
        networks:
            - jobberwocky_network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            timeout: 5s
            retries: 10

    redis:
        image: redis:7.0-alpine
        container_name: jobberwocky_redis
        restart: unless-stopped
        ports:
            -   "6379:6379"
        networks:
            - jobberwocky_network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            timeout: 5s
            retries: 5

    extra_source_api:
        build:
            context: ./docker/extra-source
            dockerfile: Dockerfile
        container_name: avature_external_api
        volumes:
            - ./docker/extra_source:/app
        ports:
            - "8080:8080"
        networks:
            - jobberwocky_network
        environment:
            - NODE_ENV=production
volumes:
    db_data:

networks:
    jobberwocky_network:
        driver: bridge

